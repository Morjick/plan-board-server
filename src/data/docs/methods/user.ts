
import {
  AlreadyExistResponse,
  BadRequestResponse,
  DeletedResponse,
  NotFoundResponse,
  OKResponse,
  ServerErrorResponse,
  UnauthorizedResponse,
  UpdatedResponse
} from '~/data/constants/Responses'
import { IApiHTTPMethod } from '~/data/interfaces/docs.interfaces'

export const userMethods: IApiHTTPMethod[] = [
  {
    id: 'create-user',
    method: 'POST',
    path: 'sign-up',
    section: 'users',
    requiredAuth: false,
    description: 'Метод для создания пользователя и регистрации',
    responses: [
      OKResponse,
      AlreadyExistResponse,
      BadRequestResponse,
      ServerErrorResponse,
    ],
    params: [
      { name: 'email', required: true, value: 'string', },
      { name: 'password', required: true, value: 'string' },
      { name: 'firstname', required: true, value: 'string' },
      { name: 'middlename', required: false, value: 'string' },
      { name: 'lastname', required: false, value: 'string' },
      { name: 'avatar', required: false, value: 'string' },
    ],
  },
  {
    id: 'login-user',
    method: 'POST',
    path: 'login',
    section: 'users',
    requiredAuth: false,
    description: 'Авторизация пользователя',
    responses: [
      OKResponse,
      ServerErrorResponse,
      NotFoundResponse,
      BadRequestResponse,
    ],
    params: [
      { name: 'email', required: true, value: 'string', },
      { name: 'password', required: true, value: 'string' },
    ],
  },
  {
    id: 'check-token',
    method: 'GET',
    path: 'check-token',
    section: 'users',
    requiredAuth: true,
    description: 'Подтвердить авторизацию',
    responses: [
      OKResponse,
      BadRequestResponse,
      UnauthorizedResponse,
      NotFoundResponse,
      ServerErrorResponse,
    ],
    params: [],
  },
  {
    id: 'update-token',
    method: 'POST',
    path: 'update-token',
    section: 'users',
    requiredAuth: false,
    description: 'Получить новый accesToken',
    responses: [
      OKResponse,
      ServerErrorResponse,
      NotFoundResponse,
      BadRequestResponse,
    ],
    params: [
      { name: 'token', required: true, value: 'string', },
    ],
  },
  {
    id: 'delete-user',
    method: 'DELETE',
    path: 'profile',
    section: 'users',
    requiredAuth: true,
    description: 'Удалить пользователя (самого себя)',
    responses: [
      DeletedResponse,
      ServerErrorResponse,
      NotFoundResponse,
      BadRequestResponse,
    ],
    params: [],
  },
  {
    id: 'get-profile',
    method: 'GET',
    path: 'profile',
    section: 'users',
    requiredAuth: true,
    description: 'Получить собственный профиль',
    responses: [
      { ...OKResponse, body: { profile: { value: 'IUserFulleProfile', type: 'IUserFulleProfile' } } },
      BadRequestResponse,
      UnauthorizedResponse,
      NotFoundResponse,
      ServerErrorResponse,
    ],
    params: [],
  },
  {
    id: 'get-user-profile',
    method: 'GET',
    path: 'profile/:hash',
    section: 'users',
    requiredAuth: false,
    description: 'Получить профиль другого пользователя',
    responses: [
      { ...OKResponse, body: { profile: { value: 'IUserProfile', type: 'IUserProfile' } } },
      BadRequestResponse,
      UnauthorizedResponse,
      NotFoundResponse,
      ServerErrorResponse,
    ],
    params: [],
  },
  {
    id: 'change-password',
    method: 'PUT',
    path: 'change-password',
    section: 'users',
    requiredAuth: true,
    description: 'Изменить пароль',
    responses: [
      UpdatedResponse,
      UnauthorizedResponse,
      ServerErrorResponse,
    ],
    params: [
      { name: 'currentPassword', required: true, value: 'string', },
      { name: 'newPassword', required: true, value: 'string', },
    ],
  },
  {
    id: 'update-profile',
    method: 'PATCH',
    path: 'update-profile',
    section: 'users',
    requiredAuth: true,
    description: 'Изменить профиль',
    responses: [
      UpdatedResponse,
      UnauthorizedResponse,
      ServerErrorResponse,
      NotFoundResponse,
    ],
    params: [
      { name: 'firstname', required: false, value: 'string', },
      { name: 'middlename', required: false, value: 'string', },
      { name: 'lastname', required: false, value: 'string', },
      { name: 'avatar', required: false, value: 'string', },
    ],
  },
  {
    id: 'forget-password',
    method: 'POST',
    path: 'forget-password',
    section: 'users',
    requiredAuth: false,
    description: 'При использовании метода отправляет на почту пользователю проверочный код',
    responses: [
      OKResponse,
      BadRequestResponse,
      NotFoundResponse,
      ServerErrorResponse,
    ],
    params: [
      { name: 'email', required: true, value: 'string', },
    ],
  },
  {
    id: 'verify-code',
    method: 'POST',
    path: 'verify-code',
    section: 'users',
    requiredAuth: false,
    description: 'Отправить код для восстановление пароля. При успешной проверке авторизует пользователя',
    responses: [
      OKResponse,
      BadRequestResponse,
      NotFoundResponse,
      ServerErrorResponse,
    ],
    params: [
      { name: 'email', required: true, value: 'string', },
      { name: 'code', required: true, value: 'string', },
    ],
  },
]
